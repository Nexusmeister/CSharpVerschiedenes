//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SOAPTest3.SeeburgerService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Name="MFT-WebServiceMFTPortType", Namespace="http://uri.seeburger.com/bisas/interfaces/WebServiceMFT", ConfigurationName="SeeburgerService.MFTWebServiceMFTPortType")]
    public interface MFTWebServiceMFTPortType {
        
        // CODEGEN: Generating message contract since the operation WebServiceToFtp is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://uri.seeburger.com/bisas/interfaces/WebServiceMFT/WebServiceToFtp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SOAPTest3.SeeburgerService.WebServiceToFtpResponse WebServiceToFtp(SOAPTest3.SeeburgerService.WebServiceToFtpRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://uri.seeburger.com/bisas/interfaces/WebServiceMFT/WebServiceToFtp", ReplyAction="*")]
        System.IAsyncResult BeginWebServiceToFtp(SOAPTest3.SeeburgerService.WebServiceToFtpRequest request, System.AsyncCallback callback, object asyncState);
        
        SOAPTest3.SeeburgerService.WebServiceToFtpResponse EndWebServiceToFtp(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebServiceToMail is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://uri.seeburger.com/bisas/interfaces/WebServiceMFT/WebServiceToMail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SOAPTest3.SeeburgerService.WebServiceToMailResponse WebServiceToMail(SOAPTest3.SeeburgerService.WebServiceToMailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://uri.seeburger.com/bisas/interfaces/WebServiceMFT/WebServiceToMail", ReplyAction="*")]
        System.IAsyncResult BeginWebServiceToMail(SOAPTest3.SeeburgerService.WebServiceToMailRequest request, System.AsyncCallback callback, object asyncState);
        
        SOAPTest3.SeeburgerService.WebServiceToMailResponse EndWebServiceToMail(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://uri.seeburger.com/bisas/schema/WebServiceMFT")]
    public partial class FtpParamsType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string uRLField;
        
        private int portField;
        
        private ftpModeType typeField;
        
        private string userField;
        
        private string passwordField;
        
        private string pathField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
                this.RaisePropertyChanged("URL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
                this.RaisePropertyChanged("Port");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public ftpModeType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
                this.RaisePropertyChanged("User");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
                this.RaisePropertyChanged("Path");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://uri.seeburger.com/bisas/schema/WebServiceMFT")]
    public enum ftpModeType {
        
        /// <remarks/>
        ACTIVE,
        
        /// <remarks/>
        PASSIVE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://uri.seeburger.com/bisas/schema/WebServiceMFT")]
    public partial class SeeFXParamsType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int amountDownloadsField;
        
        private int durationDaysField;
        
        private bool passwordProtectionField;
        
        private LocaleType localeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int amountDownloads {
            get {
                return this.amountDownloadsField;
            }
            set {
                this.amountDownloadsField = value;
                this.RaisePropertyChanged("amountDownloads");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int durationDays {
            get {
                return this.durationDaysField;
            }
            set {
                this.durationDaysField = value;
                this.RaisePropertyChanged("durationDays");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool passwordProtection {
            get {
                return this.passwordProtectionField;
            }
            set {
                this.passwordProtectionField = value;
                this.RaisePropertyChanged("passwordProtection");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public LocaleType locale {
            get {
                return this.localeField;
            }
            set {
                this.localeField = value;
                this.RaisePropertyChanged("locale");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://uri.seeburger.com/bisas/schema/WebServiceMFT")]
    public enum LocaleType {
        
        /// <remarks/>
        de,
        
        /// <remarks/>
        en,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://uri.seeburger.com/bisas/schema/WebServiceMFT")]
    public partial class MailParamsType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] recipientsField;
        
        private string subjectField;
        
        private string bodyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("recipient", IsNullable=false)]
        public string[] recipients {
            get {
                return this.recipientsField;
            }
            set {
                this.recipientsField = value;
                this.RaisePropertyChanged("recipients");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
                this.RaisePropertyChanged("subject");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
                this.RaisePropertyChanged("body");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://uri.seeburger.com/bisas/schema/WebServiceMFT")]
    public partial class ErrorDetailsType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string errorInfoField;
        
        private string errorFilenameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string errorInfo {
            get {
                return this.errorInfoField;
            }
            set {
                this.errorInfoField = value;
                this.RaisePropertyChanged("errorInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string errorFilename {
            get {
                return this.errorFilenameField;
            }
            set {
                this.errorFilenameField = value;
                this.RaisePropertyChanged("errorFilename");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebServiceToFtpRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://uri.seeburger.com/bisas/schema/WebServiceMFT", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("filename", IsNullable=false)]
        public string[] FilesElement;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://uri.seeburger.com/bisas/schema/WebServiceMFT", Order=1)]
        public SOAPTest3.SeeburgerService.FtpParamsType FtpParams;
        
        public WebServiceToFtpRequest() {
        }
        
        public WebServiceToFtpRequest(string[] FilesElement, SOAPTest3.SeeburgerService.FtpParamsType FtpParams) {
            this.FilesElement = FilesElement;
            this.FtpParams = FtpParams;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebServiceToFtpResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://uri.seeburger.com/bisas/schema/WebServiceMFT", Order=0)]
        public string Status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://uri.seeburger.com/bisas/schema/WebServiceMFT", Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("filename", IsNullable=false)]
        public string[] FilesElement;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://uri.seeburger.com/bisas/schema/WebServiceMFT", Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ErrorDetailsElement", IsNullable=false)]
        public SOAPTest3.SeeburgerService.ErrorDetailsType[] ErrorElement;
        
        public WebServiceToFtpResponse() {
        }
        
        public WebServiceToFtpResponse(string Status, string[] FilesElement, SOAPTest3.SeeburgerService.ErrorDetailsType[] ErrorElement) {
            this.Status = Status;
            this.FilesElement = FilesElement;
            this.ErrorElement = ErrorElement;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebServiceToMailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://uri.seeburger.com/bisas/schema/WebServiceMFT", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("filename", IsNullable=false)]
        public string[] FilesElement;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://uri.seeburger.com/bisas/schema/WebServiceMFT", Order=1)]
        public SOAPTest3.SeeburgerService.MailParamsType MailParams;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://uri.seeburger.com/bisas/schema/WebServiceMFT", Order=2)]
        public SOAPTest3.SeeburgerService.SeeFXParamsType SeeFXParams;
        
        public WebServiceToMailRequest() {
        }
        
        public WebServiceToMailRequest(string[] FilesElement, SOAPTest3.SeeburgerService.MailParamsType MailParams, SOAPTest3.SeeburgerService.SeeFXParamsType SeeFXParams) {
            this.FilesElement = FilesElement;
            this.MailParams = MailParams;
            this.SeeFXParams = SeeFXParams;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebServiceToMailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://uri.seeburger.com/bisas/schema/WebServiceMFT", Order=0)]
        public string Status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://uri.seeburger.com/bisas/schema/WebServiceMFT", Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("filename", IsNullable=false)]
        public string[] FilesElement;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://uri.seeburger.com/bisas/schema/WebServiceMFT", Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ErrorDetailsElement", IsNullable=false)]
        public SOAPTest3.SeeburgerService.ErrorDetailsType[] ErrorElement;
        
        public WebServiceToMailResponse() {
        }
        
        public WebServiceToMailResponse(string Status, string[] FilesElement, SOAPTest3.SeeburgerService.ErrorDetailsType[] ErrorElement) {
            this.Status = Status;
            this.FilesElement = FilesElement;
            this.ErrorElement = ErrorElement;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MFTWebServiceMFTPortTypeChannel : SOAPTest3.SeeburgerService.MFTWebServiceMFTPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceToFtpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebServiceToFtpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] FilesElement {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        public SOAPTest3.SeeburgerService.ErrorDetailsType[] ErrorElement {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SOAPTest3.SeeburgerService.ErrorDetailsType[])(this.results[1]));
            }
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceToMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebServiceToMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] FilesElement {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        public SOAPTest3.SeeburgerService.ErrorDetailsType[] ErrorElement {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SOAPTest3.SeeburgerService.ErrorDetailsType[])(this.results[1]));
            }
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MFTWebServiceMFTPortTypeClient : System.ServiceModel.ClientBase<SOAPTest3.SeeburgerService.MFTWebServiceMFTPortType>, SOAPTest3.SeeburgerService.MFTWebServiceMFTPortType {
        
        private BeginOperationDelegate onBeginWebServiceToFtpDelegate;
        
        private EndOperationDelegate onEndWebServiceToFtpDelegate;
        
        private System.Threading.SendOrPostCallback onWebServiceToFtpCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebServiceToMailDelegate;
        
        private EndOperationDelegate onEndWebServiceToMailDelegate;
        
        private System.Threading.SendOrPostCallback onWebServiceToMailCompletedDelegate;
        
        public MFTWebServiceMFTPortTypeClient() {
        }
        
        public MFTWebServiceMFTPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MFTWebServiceMFTPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MFTWebServiceMFTPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MFTWebServiceMFTPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<WebServiceToFtpCompletedEventArgs> WebServiceToFtpCompleted;
        
        public event System.EventHandler<WebServiceToMailCompletedEventArgs> WebServiceToMailCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SOAPTest3.SeeburgerService.WebServiceToFtpResponse SOAPTest3.SeeburgerService.MFTWebServiceMFTPortType.WebServiceToFtp(SOAPTest3.SeeburgerService.WebServiceToFtpRequest request) {
            return base.Channel.WebServiceToFtp(request);
        }
        
        public string WebServiceToFtp(ref string[] FilesElement, SOAPTest3.SeeburgerService.FtpParamsType FtpParams, out SOAPTest3.SeeburgerService.ErrorDetailsType[] ErrorElement) {
            SOAPTest3.SeeburgerService.WebServiceToFtpRequest inValue = new SOAPTest3.SeeburgerService.WebServiceToFtpRequest();
            inValue.FilesElement = FilesElement;
            inValue.FtpParams = FtpParams;
            SOAPTest3.SeeburgerService.WebServiceToFtpResponse retVal = ((SOAPTest3.SeeburgerService.MFTWebServiceMFTPortType)(this)).WebServiceToFtp(inValue);
            FilesElement = retVal.FilesElement;
            ErrorElement = retVal.ErrorElement;
            return retVal.Status;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SOAPTest3.SeeburgerService.MFTWebServiceMFTPortType.BeginWebServiceToFtp(SOAPTest3.SeeburgerService.WebServiceToFtpRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebServiceToFtp(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebServiceToFtp(string[] FilesElement, SOAPTest3.SeeburgerService.FtpParamsType FtpParams, System.AsyncCallback callback, object asyncState) {
            SOAPTest3.SeeburgerService.WebServiceToFtpRequest inValue = new SOAPTest3.SeeburgerService.WebServiceToFtpRequest();
            inValue.FilesElement = FilesElement;
            inValue.FtpParams = FtpParams;
            return ((SOAPTest3.SeeburgerService.MFTWebServiceMFTPortType)(this)).BeginWebServiceToFtp(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SOAPTest3.SeeburgerService.WebServiceToFtpResponse SOAPTest3.SeeburgerService.MFTWebServiceMFTPortType.EndWebServiceToFtp(System.IAsyncResult result) {
            return base.Channel.EndWebServiceToFtp(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndWebServiceToFtp(System.IAsyncResult result, out string[] FilesElement, out SOAPTest3.SeeburgerService.ErrorDetailsType[] ErrorElement) {
            SOAPTest3.SeeburgerService.WebServiceToFtpResponse retVal = ((SOAPTest3.SeeburgerService.MFTWebServiceMFTPortType)(this)).EndWebServiceToFtp(result);
            FilesElement = retVal.FilesElement;
            ErrorElement = retVal.ErrorElement;
            return retVal.Status;
        }
        
        private System.IAsyncResult OnBeginWebServiceToFtp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] FilesElement = ((string[])(inValues[0]));
            SOAPTest3.SeeburgerService.FtpParamsType FtpParams = ((SOAPTest3.SeeburgerService.FtpParamsType)(inValues[1]));
            return this.BeginWebServiceToFtp(FilesElement, FtpParams, callback, asyncState);
        }
        
        private object[] OnEndWebServiceToFtp(System.IAsyncResult result) {
            string[] FilesElement = this.GetDefaultValueForInitialization<string[]>();
            SOAPTest3.SeeburgerService.ErrorDetailsType[] ErrorElement = this.GetDefaultValueForInitialization<SOAPTest3.SeeburgerService.ErrorDetailsType[]>();
            string retVal = this.EndWebServiceToFtp(result, out FilesElement, out ErrorElement);
            return new object[] {
                    FilesElement,
                    ErrorElement,
                    retVal};
        }
        
        private void OnWebServiceToFtpCompleted(object state) {
            if ((this.WebServiceToFtpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebServiceToFtpCompleted(this, new WebServiceToFtpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebServiceToFtpAsync(string[] FilesElement, SOAPTest3.SeeburgerService.FtpParamsType FtpParams) {
            this.WebServiceToFtpAsync(FilesElement, FtpParams, null);
        }
        
        public void WebServiceToFtpAsync(string[] FilesElement, SOAPTest3.SeeburgerService.FtpParamsType FtpParams, object userState) {
            if ((this.onBeginWebServiceToFtpDelegate == null)) {
                this.onBeginWebServiceToFtpDelegate = new BeginOperationDelegate(this.OnBeginWebServiceToFtp);
            }
            if ((this.onEndWebServiceToFtpDelegate == null)) {
                this.onEndWebServiceToFtpDelegate = new EndOperationDelegate(this.OnEndWebServiceToFtp);
            }
            if ((this.onWebServiceToFtpCompletedDelegate == null)) {
                this.onWebServiceToFtpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebServiceToFtpCompleted);
            }
            base.InvokeAsync(this.onBeginWebServiceToFtpDelegate, new object[] {
                        FilesElement,
                        FtpParams}, this.onEndWebServiceToFtpDelegate, this.onWebServiceToFtpCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SOAPTest3.SeeburgerService.WebServiceToMailResponse SOAPTest3.SeeburgerService.MFTWebServiceMFTPortType.WebServiceToMail(SOAPTest3.SeeburgerService.WebServiceToMailRequest request) {
            return base.Channel.WebServiceToMail(request);
        }
        
        public string WebServiceToMail(ref string[] FilesElement, SOAPTest3.SeeburgerService.MailParamsType MailParams, SOAPTest3.SeeburgerService.SeeFXParamsType SeeFXParams, out SOAPTest3.SeeburgerService.ErrorDetailsType[] ErrorElement) {
            SOAPTest3.SeeburgerService.WebServiceToMailRequest inValue = new SOAPTest3.SeeburgerService.WebServiceToMailRequest();
            inValue.FilesElement = FilesElement;
            inValue.MailParams = MailParams;
            inValue.SeeFXParams = SeeFXParams;
            SOAPTest3.SeeburgerService.WebServiceToMailResponse retVal = ((SOAPTest3.SeeburgerService.MFTWebServiceMFTPortType)(this)).WebServiceToMail(inValue);
            FilesElement = retVal.FilesElement;
            ErrorElement = retVal.ErrorElement;
            return retVal.Status;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SOAPTest3.SeeburgerService.MFTWebServiceMFTPortType.BeginWebServiceToMail(SOAPTest3.SeeburgerService.WebServiceToMailRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebServiceToMail(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebServiceToMail(string[] FilesElement, SOAPTest3.SeeburgerService.MailParamsType MailParams, SOAPTest3.SeeburgerService.SeeFXParamsType SeeFXParams, System.AsyncCallback callback, object asyncState) {
            SOAPTest3.SeeburgerService.WebServiceToMailRequest inValue = new SOAPTest3.SeeburgerService.WebServiceToMailRequest();
            inValue.FilesElement = FilesElement;
            inValue.MailParams = MailParams;
            inValue.SeeFXParams = SeeFXParams;
            return ((SOAPTest3.SeeburgerService.MFTWebServiceMFTPortType)(this)).BeginWebServiceToMail(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SOAPTest3.SeeburgerService.WebServiceToMailResponse SOAPTest3.SeeburgerService.MFTWebServiceMFTPortType.EndWebServiceToMail(System.IAsyncResult result) {
            return base.Channel.EndWebServiceToMail(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndWebServiceToMail(System.IAsyncResult result, out string[] FilesElement, out SOAPTest3.SeeburgerService.ErrorDetailsType[] ErrorElement) {
            SOAPTest3.SeeburgerService.WebServiceToMailResponse retVal = ((SOAPTest3.SeeburgerService.MFTWebServiceMFTPortType)(this)).EndWebServiceToMail(result);
            FilesElement = retVal.FilesElement;
            ErrorElement = retVal.ErrorElement;
            return retVal.Status;
        }
        
        private System.IAsyncResult OnBeginWebServiceToMail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] FilesElement = ((string[])(inValues[0]));
            SOAPTest3.SeeburgerService.MailParamsType MailParams = ((SOAPTest3.SeeburgerService.MailParamsType)(inValues[1]));
            SOAPTest3.SeeburgerService.SeeFXParamsType SeeFXParams = ((SOAPTest3.SeeburgerService.SeeFXParamsType)(inValues[2]));
            return this.BeginWebServiceToMail(FilesElement, MailParams, SeeFXParams, callback, asyncState);
        }
        
        private object[] OnEndWebServiceToMail(System.IAsyncResult result) {
            string[] FilesElement = this.GetDefaultValueForInitialization<string[]>();
            SOAPTest3.SeeburgerService.ErrorDetailsType[] ErrorElement = this.GetDefaultValueForInitialization<SOAPTest3.SeeburgerService.ErrorDetailsType[]>();
            string retVal = this.EndWebServiceToMail(result, out FilesElement, out ErrorElement);
            return new object[] {
                    FilesElement,
                    ErrorElement,
                    retVal};
        }
        
        private void OnWebServiceToMailCompleted(object state) {
            if ((this.WebServiceToMailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebServiceToMailCompleted(this, new WebServiceToMailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebServiceToMailAsync(string[] FilesElement, SOAPTest3.SeeburgerService.MailParamsType MailParams, SOAPTest3.SeeburgerService.SeeFXParamsType SeeFXParams) {
            this.WebServiceToMailAsync(FilesElement, MailParams, SeeFXParams, null);
        }
        
        public void WebServiceToMailAsync(string[] FilesElement, SOAPTest3.SeeburgerService.MailParamsType MailParams, SOAPTest3.SeeburgerService.SeeFXParamsType SeeFXParams, object userState) {
            if ((this.onBeginWebServiceToMailDelegate == null)) {
                this.onBeginWebServiceToMailDelegate = new BeginOperationDelegate(this.OnBeginWebServiceToMail);
            }
            if ((this.onEndWebServiceToMailDelegate == null)) {
                this.onEndWebServiceToMailDelegate = new EndOperationDelegate(this.OnEndWebServiceToMail);
            }
            if ((this.onWebServiceToMailCompletedDelegate == null)) {
                this.onWebServiceToMailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebServiceToMailCompleted);
            }
            base.InvokeAsync(this.onBeginWebServiceToMailDelegate, new object[] {
                        FilesElement,
                        MailParams,
                        SeeFXParams}, this.onEndWebServiceToMailDelegate, this.onWebServiceToMailCompletedDelegate, userState);
        }
    }
}
